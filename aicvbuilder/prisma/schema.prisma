// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}


model Resume {
  id          String   @id @default(cuid()) //cuid : automaticly generated unique id
  userId      String  // this identify which user this resume belongs to
  
  title       String?  // title is optional
  description String?  // description is optional

  photoUrl    String?  
  colorHex    String @default("#000000") //  default value is black
  borderStyle String @default("squirecle") // boreder radius  , default value is squirecle ( between square and circle)
  summary     String?  
  firstName   String?  
  lastName    String?  
  jobTitle    String? 
  city        String?
  country     String?
  phone       String?
  email       String?

  workExperiences workExperience[]
  educations      Education[]

  createdAt   DateTime @default(now()) // default value is current time
  updatedAt   DateTime @updatedAt // updated time

  @@map("resumes") // by default the name of teh tabel is the nae of the model in plural form
                    // it is a personal preference to name the table as resumes
  
}

// z=each work experiece will be saved i a separated table
// one to many relashionship : 1 resume can hev multiple experience
model workExperience {
  id       String   @id @default(cuid())

  position String?
  company   String?
  startDate DateTime?
  endDate   DateTime?
  description String?

  resumeId String  // teh id of the resume which this exp related to
  
  // this relation to fetch alla work exp
  // this connects the work exp model to the resume model
  // this resume id resumeID in the workExp model) belong to the resume table ( id )
  resume   Resume @relation(fields: [resumeId], references: [id]) 


  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("workExperiences")
} 


model Education {
  id      String   @id @default(cuid())
  degree  String?
  school  String?
  startDate  String?
  endDate    String?

  resumeId String
  resume   Resume @relation(fields: [resumeId], references: [id])

  crreatedAt DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("educations")
}